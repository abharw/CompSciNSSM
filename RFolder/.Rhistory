abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
abline(h = thresh[3], col = "green")
#  I'd like to see a text-based output of my scan
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
# R script for analyzing Sugiyama QTL data
# Arav Bhardwaj
# BhardwajSugiyama.R script
# October 15, 2022
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
install.packages("qtl")
library(qtl)
library(qtl)
cross <- read.cross("csv", file = "sugiyamashort.csv", genotypes = c("C", "H", "B"),
na.strings = "-",alleles = c("C", "B"))
summary(cross)
hist(cross$pheno)
hist(cross$pheno$BP_final)
hist(cross$pheno$BP_final, xlab = "BP")
hist(cross$pheno$BP_final, xlab = "BP", main = "Blood Pressure")
hist(cross$pheno$BP_final, xlab = "BP", main = "Blood Pressure")
hist(cross$pheno$HR_final, xlab = "Heart Rate", main = "Heart Rate")
hist(cross$pheno$heart_wt, xlab = "Heart Weight", main = "Heart Weight")
plot.map(cross)
plotMissing(cross)
bp <- cross$pheno$BP_final
hr <- cross$pheno$HR_final
hw <- cross$pheno$heart_wt
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross.scanBP <- scanone(cross, pheno.col = 1, model = "normal", method = "em")
cross.scanBP.perm <- scanone(cross, pheno.col = 1, model = "normal", method = "em", n.perm = 100)
plot(cross.scanBP, main="Mainscan plot of BP")
thresh <- summary(cross.scanBP.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.10)
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.37)
summary(cross.scanBP, perm = cross.scanBP.perm)
plot(cross.scanBP.perm, main="Mainscan plot of BP")
plot(cross.scanBP.perm, main="Mainscan plot of BP")
plot(cross.scanBP, main="Mainscan plot of BP")
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross.scanHR <- scanone(cross, pheno.col = 2, model = "normal", method = "em")
cross.scanHR.perm <- scanone(cross, pheno.col = 2, model = "normal", method = "em", n.perm = 100)
plot(cross.scanHR, main="Mainscan plot of Heart Rate")
thresh <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
summary(cross.scanHR, perm = cross.scanHR.perm)
cross2 <- calc.genoprob(cross2, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross2 <- calc.genoprob(cross2, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross2 <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross2 <- sim.geno(cross2, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross.scanHR <- scanone(cross2, pheno.col = 2, model = "normal", method = "em")
cross.scanHR.perm <- scanone(cross2, pheno.col = 2, model = "normal", method = "em", n.perm = 100)
plot(cross.scanHR, main="Mainscan plot of Heart Rate")
thresh <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
summary(cross.scanHR, perm = cross.scanHR.perm)
# R script for analyzing Sugiyama QTL data
# Arav Bhardwaj
# BhardwajSugiyama.R script
# October 15, 2022
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
install.packages("qtl")
library(qtl)
cross <- read.cross("csv", file = "sugiyamashort.csv", genotypes = c("C", "H", "B"),
na.strings = "-",alleles = c("C", "B"))
summary(cross)
hist(cross$pheno$BP_final, xlab = "BP", main = "Blood Pressure")
hist(cross$pheno$HR_final, xlab = "Heart Rate", main = "Heart Rate")
hist(cross$pheno$heart_wt, xlab = "Heart Weight", main = "Heart Weight")
plot.map(cross)
plotMissing(cross)
# main scan for BP
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross.scanBP <- scanone(cross, pheno.col = 1, model = "normal", method = "em")
cross.scanBP.perm <- scanone(cross, pheno.col = 1, model = "normal", method = "em", n.perm = 100)
plot(cross.scanBP, main="Mainscan plot of BP")
thresh <- summary(cross.scanBP.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
summary(cross.scanBP, perm = cross.scanBP.perm)
cross.scanHR <- scanone(cross, pheno.col = 2, model = "normal", method = "em")
cross.scanHR.perm <- scanone(cross, pheno.col = 2, model = "normal", method = "em", n.perm = 100)
plot(cross.scanBP, main="Mainscan plot of BP")
thresh <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
plot(cross.scanBP, main="Mainscan plot of HR")
plot(cross.scanHR, main="Mainscan plot of HR")
thresh <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
cross.scanHW <- scanone(cross, pheno.col = 4, model = "normal", method = "em")
cross.scanHW.perm <- scanone(cross, pheno.col = 4, model = "normal", method = "em", n.perm = 100)
plot(cross.scanHW, main="Mainscan plot of HW")
thresh <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
# Main scan for blood pressure
cross.scanBP <- scanone(cross, pheno.col = 3, model = "normal", method = "em")
# Clean things up
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
library(qtl)
cross <- read.cross("csv", file = "sugiyamashort.csv", genotypes = c("C", "H", "B"),
na.strings = "-",alleles = c("C", "B"))
# Get summary statistics
summary(cross)
# Histograms for each phenotype
hist(cross$pheno$BP_final, xlab = "BP", main = "Blood Pressure")
hist(cross$pheno$HR_final, xlab = "Heart Rate", main = "Heart Rate")
hist(cross$pheno$heart_wt, xlab = "Heart Weight", main = "Heart Weight")
# Genetic map and missing data
plot.map(cross)
plotMissing(cross)
# Calculations used for main scan
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
# Main scan for blood pressure
cross.scanBP <- scanone(cross, pheno.col = 3, model = "normal", method = "em")
cross.scanBP.perm <- scanone(cross, pheno.col = 3, model = "normal", method = "em", n.perm = 100)
# Main scan for heart rate
cross.scanHR <- scanone(cross, pheno.col = 4, model = "normal", method = "em")
cross.scanHR.perm <- scanone(cross, pheno.col = 4, model = "normal", method = "em", n.perm = 100)
# Main scan for heart weight;
cross.scanHW <- scanone(cross, pheno.col = 6, model = "normal", method = "em")
cross.scanHW.perm <- scanone(cross, pheno.col = 6, model = "normal", method = "em", n.perm = 100)
# Plot main scans and thresholds
plot(cross.scanBP, main="Mainscan plot of Blood Pressure")
thresh <- summary(cross.scanBP.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
plot(cross.scanHR, main="Mainscan plot of Heart Rate")
thresh <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
plot(cross.scanHW, main="Mainscan plot of Heart Weight")
thresh <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = thresh[1], col = "blue")
abline(h = thresh[2], col = "red")
abline(h = thresh[3], col = "green")
# Get main scan summary statistics
summary(cross.scanBP, perm = cross.scanBP.perm)
summary(cross.scanHR, perm = cross.scanHR.perm)
summary(cross.scanHW, perm = cross.scanHW.perm)
# Plot main scans and thresholds
plot(cross.scanBP, main="Mainscan plot of Blood Pressure")
summary(cross.scanHW, perm = cross.scanHW.perm, alpha = 0.05)
# SUMMARY #
# Blood pressure
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
first <- find.marker(cross, chr = 3, pos = 48.7)
effectplot(cross, pheno.col = 3, mname1 = first)
# Heart rate
summary(cross.scanHR, perm = cross.scanHR.perm, alpha = 0.05)
= 12.0)
second <- find.marker(cross, chr = 4, pos = 12.0)
second <- find.marker(cross, chr = 4, pos = 12.0)
effectplot(cross, pheno.col = 3, mname1 = second)
# Heart rate
summary(cross.scanHR, perm = cross.scanHR.perm, alpha = 0.05)
# Heart rate
first <- find.marker(cross, chr = 4, pos = 59.8)
effectplot(cross, pheno.col = 4, mname1 = first)
effectplot(cross, pheno.col = 3, mname1 = second)
effectplot(cross, pheno.col = 4, mname1 = first)
# Heart weight
summary(cross.scanHW, perm = cross.scanHW.perm, alpha = 0.05)
# Heart weight
first <- find.marker(cross, chr = 6, pos = 52.2)
effectplot(cross, pheno.col = 6, mname1 = first)
# SUMMARY #
# Blood pressure
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
# Heart rate
summary(cross.scanHR, perm = cross.scanHR.perm, alpha = 0.05)
# Heart weight
summary(cross.scanHW, perm = cross.scanHW.perm, alpha = 0.05)
# Histograms for each phenotype
hist(cross$pheno$BP_final, xlab = "BP", main = "Blood Pressure")
hist(cross$pheno$HR_final, xlab = "Heart Rate", main = "Heart Rate")
hist(cross$pheno$heart_wt, xlab = "Heart Weight", main = "Heart Weight")
# Genetic map and missing data
plot.map(cross)
# Genetic map and missing data
plot.map(cross)
rm
# Clean things up
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
# Install and load QTL package
install.packages("qtl")
library(qtl)
# Load in data
cross <- read.cross("csv", file = "sugiyamashort.csv", genotypes = c("C", "H", "B"),
na.strings = "-",alleles = c("C", "B"))
# Get summary statistics
summary(cross)
# Genetic map and missing data
plot.map(cross)
# QQ plot with regression line
qqnorm(cross)
bp <- cross$pheno$BP_final
# QQ plot with regression line
qqnorm(bp)
qqline(bp)
hr <- cross$pheno$HR_final
# QQ plot with regression line
qqnorm(hr)
qqline(hr)
# Histograms for each phenotype
bp <- cross$pheno$BP_final
hw <- cross$pheno$heart_wt
hist(bp, xlab = "BP", main = "Blood Pressure")
hist(hr, xlab = "Heart Rate", main = "Heart Rate")
hist(hw, xlab = "Heart Weight", main = "Heart Weight")
qqnorm(bp)
qqline(bp)
")
qqline(bp)
qqnorm(bp, main = "Blood pressure")
# QQ PLOTS #
# Blood pressure
qqnorm(bp)
qqline(bp)
# QQ PLOTS #
# Blood pressure
qqnorm(bp, main = "BP")
qqline(bp)
# QQ PLOTS #
# Blood pressure
qqnorm(bp, main = "Blood Pressure")
qqline(bp)
# Heart rate
qqnorm(hr, main = "Heart Rate")
qqline(hr)
# Heart weight
qqnorm(hw, main = "Heart Weight")
qqline(hw)
plot(cross.scanBP, main="Blood Pressure")
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
# MAIN SCANS #
# Blood pressure
cross.scanBP <- scanone(cross, pheno.col = 3, model = "normal", method = "em")
cross.scanBP.perm <- scanone(cross, pheno.col = 3, model = "normal", method = "em", n.perm = 100)
# Heart rate
cross.scanHR <- scanone(cross, pheno.col = 4, model = "normal", method = "em")
cross.scanHR.perm <- scanone(cross, pheno.col = 4, model = "normal", method = "em", n.perm = 100)
# Heart weight
cross.scanHW <- scanone(cross, pheno.col = 6, model = "normal", method = "em")
cross.scanHW.perm <- scanone(cross, pheno.col = 6, model = "normal", method = "em", n.perm = 100)
plot(cross.scanBP, main="Blood Pressure")
threshBP <- summary(cross.scanBP.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshBP[1], col = "blue")
abline(h = threshBP[2], col = "red")
abline(h = threshBP[3], col = "green")
plot(cross.scanHR, main="Heart Rate")
threshHR <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHR[1], col = "blue")
abline(h = threshHR[2], col = "red")
abline(h = threshHR[3], col = "green")
lot(cross.scanHW, main="Heart Weight")
plot(cross.scanHW, main="Heart Weight")
threshHW <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
# SUMMARY #
# Blood pressure
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
# Heart rate
summary(cross.scanHR, perm = cross.scanHR.perm, alpha = 0.05)
# Heart weight
summary(cross.scanHW, perm = cross.scanHW.perm, alpha = 0.05)
plot(cross.scanHW, main="Heart Weight")
threshHW <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
threshHR <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
# Heart rate
plot(cross.scanHR, main="Heart Rate")
threshHR <- summary(cross.scanHR.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHR[1], col = "blue")
abline(h = threshHR[2], col = "red")
abline(h = threshHR[3], col = "green")
# Heart weight
plot(cross.scanHW, main="Heart Weight")
threshHW <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
# Heart weight
summary(cross.scanHW, perm = cross.scanHW.perm, alpha = 0.05)
# Heart weight
cross.scanHW <- scanone(cross, pheno.col = 6, model = "normal", method = "em")
cross.scanHW.perm <- scanone(cross, pheno.col = 6, model = "normal", method = "em", n.perm = 100)
# Heart weight
plot(cross.scanHW, main="Heart Weight")
threshHW <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
# SUMMARY #
# Blood pressure
summary(cross.scanBP, perm = cross.scanBP.perm, alpha = 0.05)
# EFFECT PLOTS #
# Blood pressure
firstBP <- find.marker(cross, chr = 3, pos = 48.7)
effectplot(cross, pheno.col = 3, mname1 = firstBP)
secondBP <- find.marker(cross, chr = 4, pos = 12.0)
effectplot(cross, pheno.col = 3, mname1 = secondBP)
# Heart rate
summary(cross.scanHR, perm = cross.scanHR.perm, alpha = 0.05)
# Heart rate
firstHR <- find.marker(cross, chr = 4, pos = 59.8)
effectplot(cross, pheno.col = 4, mname1 = firstHR)
# Heart weight
firstHW <- find.marker(cross, chr = 6, pos = 52.2)
effectplot(cross, pheno.col = 6, mname1 = firstHW)
# Clean things up
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
# Install and load QTL package
install.packages("qtl")
library(qtl)
# Load in data
cross <- read.cross("csv", file = "shimomura.csv", genotypes = c("A", "H", "B"),
na.strings = "-",alleles = c("A", "B"))
# Get summary statistics
summary(cross)
# Jittermap
jittermap(cross)
# HISTOGRAMS #
# Blood pressure
phase <- cross$pheno$phase
hist(phase, xlab = "phase", main = "Phase")
hist(phase, xlab = "Phase", main = "Phase Angle of Entrainment")
# Amplitude of circadian rhythmicity
amp <- cross$pheno$amp
hist(amp, xlab = "Amplitude", main = "Amplitude of Circadian Rhythmicity")
# Circadian activity level
act <- cross$pheno$act
hist(act, xlab = "Activity Level", main = "Circadian Activity Level")
# Genetic map and missing data
plot.map(cross)
plotMissing(cross)
# QQ PLOTS #
# Phase angle of entrainment
qqnorm(phase, main = "Phase Angle of Entrainment")
qqline(phase)
# Amplitude of circadian rhythmicity
qqnorm(amp, main = "Amplitude of Circadian Rhythmicity")
qqline(hr)
qqline(amp)
# Circadian activity level
qqnorm(act, main = "Circadian Activity Level")
qqline(act)
# CROSS CALCS #
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
# MAIN SCANS #
# Phase angle of entrainment
cross.scanPhase <- scanone(cross, pheno.col = 7, model = "normal", method = "em")
cross.scanPhase.perm <- scanone(cross, pheno.col = 7, model = "normal", method = "em", n.perm = 100)
# Heart rate
cross.scanAmp <- scanone(cross, pheno.col = 8, model = "normal", method = "em")
cross.scanAmp.perm <- scanone(cross, pheno.col = 8, model = "normal", method = "em", n.perm = 100)
# Circadian activity level
cross.scanAct <- scanone(cross, pheno.col = 9, model = "normal", method = "em")
cross.scanAct.perm <- scanone(cross, pheno.col = 9, model = "normal", method = "em", n.perm = 100)
# PLOT MAIN SCANS #
# Phase angle of entrainment
plot(cross.scanPhase, main="Phase Angle of Entrainment")
threshBP <- summary(cross.scanPhase.perm, alpha = c(0.37, 0.10, 0.05))
threshPh <- summary(cross.scanPhase.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshPh[1], col = "blue")
abline(h = threshPh[2], col = "red")
abline(h = threshPh[3], col = "green")
# Amplitude of circadian rhythmicity
plot(cross.scanAmp, main="Amplitude of Circadian Rhythmicity")
threshAmp <- summary(cross.scanAmp.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshAmp[1], col = "blue")
abline(h = threshAmp[2], col = "red")
abline(h = threshAmp[3], col = "green")
# Circadian activity level
cross.scanAct <- scanone(cross, pheno.col = 9, model = "normal", method = "em")
# Amplitude of circadian rhythmicity
cross.scanAmp <- scanone(cross, pheno.col = 8, model = "normal", method = "em")
cross.scanAmp.perm <- scanone(cross, pheno.col = 8, model = "normal", method = "em", n.perm = 100)
# Amplitude of circadian rhythmicity
plot(cross.scanAmp, main="Amplitude of Circadian Rhythmicity")
threshAmp <- summary(cross.scanAmp.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshAmp[1], col = "blue")
abline(h = threshAmp[2], col = "red")
abline(h = threshAmp[3], col = "green")
# Heart weight
plot(cross.scanAct, main="Circadian Activity Level")
threshHW <- summary(cross.scanHW.perm, alpha = c(0.37, 0.10, 0.05))
threshHW <- summary(cross.scanAct.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
cross.scanAct.perm <- scanone(cross, pheno.col = 9, model = "normal", method = "em", n.perm = 100)
# Heart weight
plot(cross.scanAct, main="Circadian Activity Level")
threshAct <- summary(cross.scanAct.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshAct[1], col = "blue")
abline(h = threshAct[2], col = "red")
abline(h = threshAct[3], col = "green")
threshAct <- summary(cross.scanAct.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshAct[1], col = "blue")
abline(h = threshAct[2], col = "red")
abline(h = threshAct[3], col = "green")
# Heart weight
plot(cross.scanAct, main="Circadian Activity Level")
threshHW <- summary(cross.scanAct.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
# Circadian activity level
cross.scanAct <- scanone(cross, pheno.col = 9, model = "normal", method = "em")
cross.scanAct.perm <- scanone(cross, pheno.col = 9, model = "normal", method = "em", n.perm = 100)
# Heart weight
plot(cross.scanAct, main="Circadian Activity Level")
threshHW <- summary(cross.scanAct.perm, alpha = c(0.37, 0.10, 0.05))
abline(h = threshHW[1], col = "blue")
abline(h = threshHW[2], col = "red")
abline(h = threshHW[3], col = "green")
# R script for analyzing Shimomura  QTL data
# Arav Bhardwaj
# BhardwajIndyQTL.R script
# October 15, 2022
# Clean things up
rm(list=ls())
setwd("/Users/abhardwaj24/Desktop/RFolder")
# Install and load QTL package
install.packages("qtl")
library(qtl)
# Load in data
cross <- read.cross("csv", file = "shimomura.csv", genotypes = c("A", "H", "B"),
na.strings = "-",alleles = c("A", "B"))
# Get summary statistics
summary(cross)
# Jittermap
jittermap(cross)
# HISTOGRAMS #
# Phase angle of entrainment
phase <- cross$pheno$phase
hist(phase, xlab = "Phase", main = "Phase Angle of Entrainment")
# Amplitude of circadian rhythmicity
amp <- cross$pheno$amp
hist(amp, xlab = "Amplitude", main = "Amplitude of Circadian Rhythmicity")
# Circadian activity level
act <- cross$pheno$act
hist(act, xlab = "Activity Level", main = "Circadian Activity Level")
# Genetic map and missing data
plot.map(cross)
plotMissing(cross)
# QQ PLOTS #
# Phase angle of entrainment
qqnorm(phase, main = "Phase Angle of Entrainment")
qqline(phase)
# Amplitude of circadian rhythmicity
qqnorm(amp, main = "Amplitude of Circadian Rhythmicity")
qqline(amp)
# Circadian activity level
qqnorm(act, main = "Circadian Activity Level")
qqline(act)
# CROSS CALCS #
cross <- calc.genoprob(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
cross <- sim.geno(cross, step = 2.0, off.end = 0, error.prob = 1.0e-4,
map.function = "haldane", stepwidth = "fixed")
# MAIN SCANS #
# Phase angle of entrainment
cross.scanPhase <- scanone(cross, pheno.col = 7, model = "normal", method = "em")
